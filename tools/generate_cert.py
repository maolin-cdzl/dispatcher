#!/usr/bin/env python

"""
Generate client and server CURVE certificate files then move them into the
appropriate store directory, private_keys or public_keys. The certificates
generated by this script are used by the stonehouse and ironhouse examples.
In practice this would be done by hand or some out-of-band process.
Author: Chris Laws
"""

import os
import sys
import shutil
import zmq.auth

def generate_certificates(base_dir,prefix_name):
    ''' Generate client and server CURVE certificate files'''
    keys_dir = base_dir
    public_keys_dir = os.path.join(base_dir,'public_keys')
    secret_keys_dir = os.path.join(base_dir,'private_keys')

    # Create directories for certificates, remove old content if necessary
    for d in [ public_keys_dir, secret_keys_dir]:
        if not os.path.exists(d):
            os.mkdir(d)

    # create new keys in certificates dir
    public_file, secret_file = zmq.auth.create_certificates(keys_dir, prefix_name)

    # move public keys to appropriate directory
    for key_file in os.listdir(keys_dir):
        if key_file.endswith(".key"):
            shutil.move(os.path.join(keys_dir, key_file),
                        os.path.join(public_keys_dir, '.'))

    # move secret keys to appropriate directory
    for key_file in os.listdir(keys_dir):
        if key_file.endswith(".key_secret"):
            shutil.move(os.path.join(keys_dir, key_file),
                        os.path.join(secret_keys_dir, '.'))

if __name__ == '__main__':
    if zmq.zmq_version_info() < (4,0):
        raise RuntimeError("Security is not supported in libzmq version < 4.0. libzmq version {0}".format(zmq.zmq_version()))

    if len(sys.argv) != 2:
        print('Usage:')
        print('\t%s <cert_name>' % sys.argv[0])
        exit(0)
    generate_certificates(os.getcwd(),sys.argv[1])

